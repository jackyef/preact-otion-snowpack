import Koa from 'koa';
import serve from 'koa-static';
import { h } from 'preact';
import renderToString from 'preact-render-to-string';
import App from '../src/App';
import { setup } from 'otion';
import { getStyleTag, VirtualInjector } from 'react-otion/server';
import otionConfig from './otion.config';

/**
 * Injected by webpack.DefinePlugin
 */
declare const ASSETS_MANIFEST_PATH: string;
declare const STATIC_ASSETS_PATH: string;

const app = new Koa();
const webpackManifest = require(ASSETS_MANIFEST_PATH);
const mainJs = webpackManifest.main.js;

app.use(
  serve(STATIC_ASSETS_PATH, {
    index: 'NO_INDEX_FILE_ALLOWED.html',
  }),
); // serve the static assets generated by snowpack build

app.use(async (ctx) => {
  const injector = VirtualInjector();
  setup({ ...otionConfig, injector });

  const markup = renderToString(<App name="SSR" />);

  // simulate asynchronous rendering, for example, maybe we are using react-apollo `renderToStringWithData()`
  // Because goober use a single "sheet" for SSR, this will not work properly.
  // Only the first finished request will get the style from extractCss();
  // await (async () => {
  //   return new Promise((resolve) => {
  //     setTimeout(() => {
  //       resolve();
  //     }, 3000);
  //   });
  // })();

  const style = getStyleTag(injector);

  console.log('foo', { style });

  ctx.body = `
    <html>
    <head>
      <meta charset="utf-8" />
      <link rel="icon" href="/favicon.ico" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <meta name="description" content="Web site created using create-snowpack-app" />
      <title>SSR - Snowpack preact</title>
      <style>
        body {
          margin: 0;
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
            sans-serif;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
        }

        code {
          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
            monospace;
        }
      </style>
      ${style}
    </head>
    <body>
      <div id="root">${markup}</div>
      <script defer src="${mainJs}"></script>
    </body>
    </html>
  `;
});

if (process.env.NODE_ENV === 'production') {
  app.listen(8001, () => {
    console.log('Koa server listening on port 8001');
  });
}

export default app;
